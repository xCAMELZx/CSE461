package com.my.solar1;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import java.nio.ShortBuffer;

import javax.microedition.khronos.opengles.GL10;
public class Sphere {
	
	float y=0.2f;
	
	private float vertices[]=
	{
			-0.0f,0.54308f, 0.0f,//0
			-0.27154f, 0.470321f, 0.0f,//1
			-0.192008f, 0.470321f, 0.192008f,//2
			-0.0f,0.470321f, 0.27154f,//3
			0.192008f,0.470321f,0.192008f,//4
			0.27154f,0.470321f,0.0f,//5
			0.192008f, 0.470321f, -0.192008f,//6
			-0.0f,0.470321f, -0.27154f,//7
			-0.192008f, 0.470321f, -0.192008f,//8
			-0.470321f,0.27154f,0.0f,//9
			-0.332567f,0.27154f,0.332567f,//10
			-0.0f,0.27154f,0.470321f,//11
			0.332567f,0.27154f,0.332567f,//12
			0.470321f,0.27154f,0.0f,//13
			0.332567f,0.27154f,-0.332567f,//14
			-0.0f,0.27154f,-0.470321f,//15
			-0.332567f,0.27154f,-0.332567f,//16
			-0.54308f,0.0f,0.0f,//17
			-0.384015f,0.0f, 0.384015f,//18
			-0.0f,0.0f,0.54308f,//19
			0.384015f,0.0f, 0.384015f,//20
			0.54308f,0.0f,0.0f,//21
			0.384015f,0.0f, -0.384015f,//22
			-0.0f,0.0f,-0.54308f,//23
			-0.384015f,0.0f, -0.384015f,//24
			-0.470321f,-0.27154f,0.0f,//25
			-0.332567f,-0.27154f,0.332567f,//26
			-0.0f,-0.27154f,0.470321f,//27
			0.332567f,-0.27154f,0.332567f,//28
			0.470321f,-0.27154f,0.0f,//29
			0.332567f,-0.27154f,-0.332567f,//30
			-0.0f,-0.27154f,-0.470321f,//31
			-0.332567f,-0.27154f,-0.332567f,//32
			-0.27154f, -0.470321f, 0.0f,//33
			-0.192008f, -0.470321f, 0.192008f,//34
			-0.0f,-0.470321f, 0.27154f,//35
			0.192008f,-0.470321f,0.192008f,//36
			0.27154f,-0.470321f,0.0f,//37
			0.192008f, -0.470321f, -0.192008f,//38
			-0.0f,-0.470321f, -0.27154f,//39
			-0.192008f, -0.470321f, -0.192008f,//40
			-0.0f,-0.54308f, 0.0f//41				
	};
	
	private short[] indices =
	{
			0,1,2,
			0,2,3,
			0,3,4,
			0,4,5,
			0,5,6,
			0,6,7,
			0,7,8,
			0,8,1,
			1,9,10,
			2,1,10,
			3,2,10,
			3,10,11,
			4,3,11,
			4,11,12,
			5,4,12,
			5,12,13,
			6,5,13,
			6,13,14,
			7,6,14,
			7,14,15,
			8,7,15,
			8,15,16,
			1,8,16,
			1,16,9,
			9,17,10,
			10,17,18,
			11,10,18,
			11,18,19,
			12,11,19,
			12,19,20,
			13,12,20,
			13,20,21,
			14,13,21,
			14,21,22,
			15,14,22,
			15,22,23,
			16,15,23,
			16,23,24,
			9,16,24,
			9,24,17,
			18,17,25,
			18,25,26,
			19,18,26,
			19,26,27,
			20,19,27,
			20,27,28,
			21,20,28,
			21,28,29,
			22,21,29,
			22,29,30,
			23,22,30,
			23,30,31,
			24,23,31,
			24,31,32,
			17,24,32,
			17,32,25,
			26,25,33,
			26,33,34,
			27,26,34,
			27,34,35,
			28,27,35,
			28,35,36,
			29,28,36,
			29,36,37,
			30,29,37,
			30,37,38,
			31,30,38,
			31,38,39,
			32,31,39,
			32,39,40,
			25,32,40,
			25,40,33,
			41,34,33,
			41,35,34,
			41,36,35,
			41,37,36,
			41,38,37,
			41,39,38,
			41,40,39,
			41,33,40
			
			
			
			
			
	};

/*
	private float vertices[]={
			-0.33f,0.7f,0.6f,//0----------
			0.33f,0.7f,0.6f,//1-----------
			-0.5f,0.1f,1f,//2
			0.5f,0.1f,1f,//3
			-0.5f,-0.1f,1f,//4
			0.5f,-0.1f,1f,//5
			-0.33f,-0.7f,0.6f,//6
			0.33f,-0.7f,0.6f,//7
			0f,1f,0f,//8-----------
			0f,-1f,0f,//9
		    -0.67f,0.7f,0f,//10----------
		    0.67f,0.7f, 0f,//11----------
		    -0.9f,0.1f, 0f,//12
		    0.9f, 0.1f, 0f,//13
		    -0.9f,-0.1f,0f,//14
		    0.9f,-0.1f,0f,//15
		    -0.67f,-0.7f,0f,//16
		    0.67f,-0.7f,0f,//17
		    -0.33f,0.7f,-0.6f,//18----------
			0.33f,0.7f,-0.6f,//19----------
			-0.5f,0.1f,-1f,//20
			0.5f,0.1f,-1f,//21
			-0.5f,-0.1f,-1f,//22
			0.5f,-0.1f,-1f,//23
			-0.33f,-0.7f,-0.6f,//24
			0.33f,-0.7f,-0.6f//25
	};
	
	private short[] indices ={
		8,10,0,
		8,0,1,
		8,1,11,
		8,11,19,
		8,19,18,
		8,18,10,
		0,10,12,
		0,12,2,
		1,0,2,
		1,2,3,
		11,1,3,
		11,3,13,
		19,11,13,
		19,13,21,
		18,19,21,
		18,21,20,
		10,18,20,
		10,20,12,
		2,12,14,
		2,14,4,
		3,2,4,
		3,4,5,
		13,3,5,
		13,5,15,
		21,13,15,
		21,15,23,
		20,21,23,
		20,23,22,
		12,20,22,
		12,22,14,
		4,14,16,
		4,16,6,
		5,4,6,
		5,6,7,
		15,5,7,
		15,7,17,
		23,15,17,
		23,17,25,
		22,23,25,
		22,25,24,
		14,22,24,
		14,24,16,
		6,16,9,
		7,6,9,
		17,7,9,	
		25,17,9,
		24,25,9,
		16,24,9
	};
	

	*/
	private FloatBuffer vertexBuffer;
 	private ShortBuffer indexBuffer;
	
	public Sphere() {

		ByteBuffer vbb = ByteBuffer.allocateDirect(vertices.length * 4);
		vbb.order(ByteOrder.nativeOrder());
		vertexBuffer = vbb.asFloatBuffer();
		vertexBuffer.put(vertices);
		vertexBuffer.position(0);
		ByteBuffer ibb = ByteBuffer.allocateDirect(indices.length * 2);
		ibb.order(ByteOrder.nativeOrder());
		indexBuffer = ibb.asShortBuffer();
		indexBuffer.put(indices);
		indexBuffer.position(0);
	}
		public void draw(GL10 gl) {
			// gl.glColor4f(0.8f, 0.8f, 1.0f, 1.0f);
			gl.glFrontFace(GL10.GL_CCW);
			gl.glEnable(GL10.GL_CULL_FACE);
			gl.glCullFace(GL10.GL_BACK);
			gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
			gl.glVertexPointer(3, GL10.GL_FLOAT, 0, vertexBuffer);
			
			gl.glDrawElements(GL10.GL_TRIANGLES, indices.length, GL10.GL_UNSIGNED_SHORT, indexBuffer);
		

	//		gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);

		//	gl.glDisable(GL10.GL_CULL_FACE);
		}
	

}