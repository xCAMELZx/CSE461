package com.my.solar1;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import java.nio.ShortBuffer;

import javax.microedition.khronos.opengles.GL10;
public class butsqr {
	

	private float vertices[]={
		      -4.0f,  1.0f, 0.0f,  
		      -4.0f, -1.0f, 0.0f,  
		       4.0f, -1.0f, 0.0f,  
		       4.0f,  1.0f, 0.0f,  
		};
	
	
	private short[] indices = { 0, 1, 2, 0, 2, 3 };
	private FloatBuffer vertexBuffer;
 	private ShortBuffer indexBuffer;
	
	public butsqr() {

		ByteBuffer vbb = ByteBuffer.allocateDirect(vertices.length * 4);
		vbb.order(ByteOrder.nativeOrder());
		vertexBuffer = vbb.asFloatBuffer();
		vertexBuffer.put(vertices);
		vertexBuffer.position(0);
		ByteBuffer ibb = ByteBuffer.allocateDirect(indices.length * 2);
		ibb.order(ByteOrder.nativeOrder());
		indexBuffer = ibb.asShortBuffer();
		indexBuffer.put(indices);
		indexBuffer.position(0);
	}
		public void draw(GL10 gl) {
			// gl.glColor4f(0.8f, 0.8f, 1.0f, 1.0f);
			gl.glFrontFace(GL10.GL_CCW);
			gl.glEnable(GL10.GL_CULL_FACE);
			gl.glCullFace(GL10.GL_BACK);
			gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
			gl.glVertexPointer(3, GL10.GL_FLOAT, 0, vertexBuffer);
			
			gl.glDrawElements(GL10.GL_TRIANGLES, indices.length, GL10.GL_UNSIGNED_SHORT, indexBuffer);
		

			gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);

			gl.glDisable(GL10.GL_CULL_FACE);
		}

}























/*
private float vertices[]={
		-0.5f,0.5f,-0.5f,-0.5f,-0.5f,-0.5f,0.5f,-0.5f,-0.5f,0.5f,0.5f,-0.5f,
		-0.5f,0.5f,0.5f,-0.5f,-0.5f,0.5f,0.5f,-0.5f,0.5f,0.5f,0.5f,0.5f,};
		
private short[] indices = { 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 0/*, 3, 4, 4, 3, 7, 1, 2, 5, 5,
		2, 6, 3, 2, 6, 3, 6, 7, 0, 1, 5, 0, 5, 4};


private float vertices[]={
		-0.33f,0.7f,0.6f,//0----------
		0.33f,0.7f,0.6f,//1-----------
		-0.5f,0.1f,1f,//2
		0.5f,0.1f,1f,//3
		-0.5f,-0.1f,1f,//4
		0.5f,-0.1f,1f,//5
		-0.33f,-0.7f,0.6f,//6
		0.33f,-0.7f,0.6f,//7
		0f,1f,0f,//8-----------
		0f,-1f,0f,//9
	    -0.67f,0.7f,0f,//10----------
	    0.67f,0.7f, 0f,//11----------
	    -0.9f,0.1f, 0f,//12
	    0.9f, 0.1f, 0f,//13
	    -0.9f,-0.1f,0f,//14
	    0.9f,-0.1f,0f,//15
	    -0.67f,-0.7f,0f,//16
	    0.67f,-0.7f,0f,//17
	    -0.33f,0.7f,-0.6f,//18----------
		0.33f,0.7f,-0.6f,//19----------
		-0.5f,0.1f,-1f,//20
		0.5f,0.1f,-1f,//21
		-0.5f,-0.1f,-1f,//22
		0.5f,-0.1f,-1f,//23
		-0.33f,-0.7f,-0.6f,//24
		0.33f,-0.7f,-0.6f//25
};

private short[] indices ={
	8,10,0,
	8,0,1,
	8,1,11,
	8,11,19,
	8,19,18,
	8,18,10,
	0,10,12,
	0,12,2,
	1,0,2,
	1,2,3,
	11,1,3,
	11,3,13,
	19,11,13,
	19,13,21,
	18,19,21,
	18,21,20,
	10,18,20,
	10,20,12,
	2,12,14,
	2,14,4,
	3,2,4,
	3,4,5,
	13,3,5,
	13,5,15,
	21,13,15,
	21,15,23,
	20,21,23,
	20,23,22,
	12,20,22,
	12,22,14,
	4,14,16,
	4,16,6,
	5,4,6,
	5,6,7,
	15,5,7,
	15,7,17,
	23,15,17,
	23,17,25,
	22,23,25,
	22,25,24,
	14,22,24,
	14,24,16,
	6,16,9,
	7,6,9,
	17,7,9,	
	25,17,9,
	24,25,9,
	16,24,9
};


/*private float vertices[]={0f, 0.333333f, 0.942809f, 0.896657f, 0.333333f, 0.291368f, 0.55421f, 0.333333f,
		-0.762719f, -0.554109f, 0.333333f, -0.762793f, -0.896695f, 0.333333f, 0.291249f,
		 0f, -0.333333f, 0.942809f, 0.896657f, -0.333333f, 0.291368f, 0.55421f, -0.333333f, 
		 -0.762719f, -0.554109f, -0.333333f, -0.762793f, -0.896695f, -0.333333f, 0.291249f, 
		 0f, 1f, 0f, 0f, -1f, 0f,};

private short[] indices ={0, 1, 5, 1, 6, 5, 1, 2, 6, 2, 7, 6, 2, 3, 7, 3, 8, 7, 3, 4, 8, 4, 9, 8, 4, 0, 9,
 5, 0, 9, 0, 1, 10, 1, 2, 10, 2, 3, 10, 3, 4, 10, 4, 0, 10, 5, 6, 11, 6, 7, 11,
7, 8, 11, 8, 9, 11, 9, 5, 11,};

private float vertices[]={0f, 0.714286f, 0.699854f, 0.494863f, 0.714286f, 0.49488f, 0.699854f, 0.714286f,
		2.31364e-005f, 0.494896f, 0.714286f, -0.494847f, 4.62727e-005f, 0.714286f, 
		-0.699854f, -0.494831f, 0.714286f, -0.494913f, -0.699854f, 0.714286f, -6.94091e-005f,
		 -0.494929f, 0.714286f, 0.494814f, 0f, 0.428571f, 0.903508f, 0.638866f, 
		 0.428571f, 0.638887f, 0.903508f, 0.428571f, 2.98689e-005f, 0.638908f, 0.428571f, 
		 -0.638845f, 5.97379e-005f, 0.428571f, -0.903508f, -0.638824f, 0.428571f, -0.638929f, 
		 -0.903508f, 0.428571f, -8.96068e-005f, -0.63895f, 0.428571f, 0.638803f, 0f, 
		 0.142857f, 0.989743f, 0.699843f, 0.142857f, 0.699866f, 0.989743f, 0.142857f, 
		 3.27198e-005f, 0.699889f, 0.142857f, -0.69982f, 6.54395e-005f, 0.142857f, -0.989743f, 
		 -0.699796f, 0.142857f, -0.699912f, -0.989743f, 0.142857f, -9.81593e-005f, 
		 -0.699935f, 0.142857f, 0.699773f, 0f, -0.142857f, 0.989743f, 0.699843f, -0.142857f, 
		 0.699866f, 0.989743f, -0.142857f, 3.27198e-005f, 0.699889f, -0.142857f, -0.69982f, 
		 6.54395e-005f, -0.142857f, -0.989743f, -0.699796f, -0.142857f, -0.699912f, 
		 -0.989743f, -0.142857f, -9.81593e-005f, -0.699935f, -0.142857f, 0.699773f, 0f, 
		 -0.428571f, 0.903508f, 0.638866f, -0.428571f, 0.638887f, 0.903508f, -0.428571f, 
		 2.98689e-005f, 0.638908f, -0.428571f, -0.638845f, 5.97379e-005f, -0.428571f, -0.903508f,
		 -0.638824f, -0.428571f, -0.638929f, -0.903508f, -0.428571f, -8.96068e-005f, -0.63895f, 
		 -0.428571f, 0.638803f, 0f, -0.714286f, 0.699854f, 0.494863f, -0.714286f,
		 0.49488f, 0.699854f, -0.714286f, 2.31364e-005f, 0.494896f, -0.714286f, -0.494847f, 
		 4.62727e-005f, -0.714286f, -0.699854f, -0.494831f, -0.714286f, -0.494913f, 
		 -0.699854f, -0.714286f, -6.94091e-005f, -0.494929f, -0.714286f, 0.494814f, 0f, 1f
		, 0f, 0f, -1f, 0f,	 3.27198e-005f, 0.699889f, 0.142857f, -0.69982f, 6.54395e-005f, 0.142857f, -0.989743f, 
		 -0.699796f, 0.142857f, -0.699912f, -0.989743f, 0.142857f, -9.81593e-005f, 
		 -0.699935f, 0.142857f, 0.699773f, 0f, -0.142857f, 0.989743f, 0.699843f, -0.142857f, 
		 0.699866f, 0.989743f, -0.142857f, 3.27198e-005f, 0.699889f, -0.142857f, -0.69982f, 
		 6.54395e-005f, -0.142857f, -0.989743f, -0.699796f, -0.142857f, -0.699912f, 
		 -0.989743f, -0.142857f, -9.81593e-005f, -0.699935f, -0.142857f, 0.699773f, 0f, 
		 -0.428571f, 0.903508f, 0.638866f, -0.428571f, 0.638887f, 0.903508f, -0.428571f, 
		 2.98689e-005f, 0.638908f, -0.428571f, -0.638845f, 5.97379e-005f, -0.428571f, -0.903508f,
		 -0.638824f, -0.428571f, -0.638929f, -0.903508f, -0.428571f, -8.96068e-005f, -0.63895f, 
		 -0.428571f, 0.638803f, 0f, -0.714286f, 0.699854f, 0.494863f, -0.714286f,
		 0.49488f, 0.699854f, -0.714286f, 2.31364e-005f, 0.494896f, -0.714286f, -0.494847f, 
		 4.62727e-005f, -0.714286f, -0.699854f, -0.494831f, -0.714286f, -0.494913f, 
		 -0.699854f, -0.714286f, -6.94091e-005f, -0.494929f, -0.714286f, 0.494814f, 0f, 1f
		, 0f, 0f, -1f, 0f, }; 

private short[] indices ={0, 1, 8, 1, 9, 8, 1, 2, 9, 2, 10, 9, 2, 3, 10, 3, 11, 10, 3, 4, 11, 4, 12, 11, 4
, 5, 12, 5, 13, 12, 5, 6, 13, 6, 14, 13, 6, 7, 14, 7, 15, 14, 7, 0, 15, 8, 0, 15
, 8, 9, 16, 9, 17, 16, 9, 10, 17, 10, 18, 17, 10, 11, 18, 11, 19, 18, 11, 12, 19
, 12, 20, 19, 12, 13, 20, 13, 21, 20, 13, 14, 21, 14, 22, 21, 14, 15, 22, 15, 23
, 22, 15, 8, 23, 16, 8, 23, 16, 17, 24, 17, 25, 24, 17, 18, 25, 18, 26, 25, 18,
19, 26, 19, 27, 26, 19, 20, 27, 20, 28, 27, 20, 21, 28, 21, 29, 28, 21, 22, 29,
22, 30, 29, 22, 23, 30, 23, 31, 30, 23, 16, 31, 24, 16, 31, 24, 25, 32, 25, 33,
32, 25, 26, 33, 26, 34, 33, 26, 27, 34, 27, 35, 34, 27, 28, 35, 28, 36, 35, 28,
29, 36, 29, 37, 36, 29, 30, 37, 30, 38, 37, 30, 31, 38, 31, 39, 38, 31, 24, 39,
32, 24, 39, 32, 33, 40, 33, 41, 40, 33, 34, 41, 34, 42, 41, 34, 35, 42, 35, 43,
42, 35, 36, 43, 36, 44, 43, 36, 37, 44, 37, 45, 44, 37, 38, 45, 38, 46, 45, 38,
39, 46, 39, 47, 46, 39, 32, 47, 40, 32, 47, 0, 1, 48, 1, 2, 48, 2, 3, 48, 3, 4,
48, 4, 5, 48, 5, 6, 48, 6, 7, 48, 7, 0, 48, 40, 41, 49, 41, 42, 49, 42, 43, 49,
43, 44, 49, 44, 45, 49, 45, 46, 49, 46, 47, 49, 47, 40, 49, };

/*
float t = (float)((Math.sqrt(5) - 1)/2);

private float vertices[]={-1,-t,0,
0,1,t,
0,1,-t,
1,t,0,
1,-t,0,
0,-1,-t,
0,-1,t,
t,0,1,
-t,0,1,
t,0,-1,
t,0,-1,
-1,t,0,
};
private short[] indices ={3, 7, 1 ,
4, 7, 3 ,
6, 7, 4 ,
8, 7, 6 ,
7, 8, 1,
9, 4, 3 ,
2, 9, 3 ,
2, 3, 1 ,
11, 2, 1 ,
10, 2, 11,
10, 9, 2,
9, 5, 4,
6, 4, 5,
0, 6, 5,
0, 11, 8,
11, 1, 8,
10, 0, 5,
10, 5, 9,
0, 8, 6,
0, 10, 11,
};

float X =.525731112119133606f; 
float Z = .850650808352039932f;

private float vertices[]={ 
    -X, 0.0f, Z, X, 0.0f, Z, -X, 0.0f, -Z, X, 0.0f, -Z,    
    0.0f, Z, X, 0.0f, Z, -X, 0.0f, -Z, X, 0.0f, -Z, -X,    
    Z, X, 0.0f, -Z, X, 0.0f, Z, -X, 0.0f, -Z, -X, 0.0f 
};
private short[] indices = { 
    0,4,1, 0,9,4, 9,5,4, 4,5,8, 4,8,1,    
    8,10,1, 8,3,10, 5,3,8, 5,2,3, 2,7,3,    
    7,10,3, 7,6,10, 7,11,6, 11,0,6, 0,1,6, 
    6,1,10, 9,0,11, 9,11,2, 9,2,5, 7,2,11};

/*
private float vertices[]={
		-0.5f,0.5f,-0.5f,-0.5f,-0.5f,-0.5f,0.5f,-0.5f,-0.5f,0.5f,0.5f,-0.5f,
		-0.5f,0.5f,0.5f,-0.5f,-0.5f,0.5f,0.5f,-0.5f,0.5f,0.5f,0.5f,0.5f,};
		
private short[] indices = { 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 0, 3, 4, 4, 3, 7, 1, 2, 5, 5,
		2, 6, 3, 2, 6, 3, 6, 7, 0, 1, 5, 0, 5, 4};
*/